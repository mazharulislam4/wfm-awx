---
- name: Create Server Profiles
  hosts: localhost
  connection: local
  gather_facts: no

  vars_files:
    - credentials.yml

  vars:
    # Runtime parameters - passed from previous steps or command line
    # Fixed: Use proper fallback syntax
    org_moid: "{{ Lookup_Organization_Moid.moid | default(organization.moid | default(steps.step1.organization.moid | default(''))) }}"
    pool_moid: "{{ resource_pool_moid | default(resource_pool.moid | default(steps.step2.resource_pool.moid | default(''))) }}"
    template_moid: "{{ steps.step3.server_profile_template.moid | default(server_profile_template.moid | default(steps.step3.server_profile_template.moid | default(''))) }}"

    profiles_to_create: >-
      {{
        [{
          'name': profile_name | default('default-profile'),
          'description': profile_description | default('Created by Ansible automation')
        }]
      }}

  tasks:
    - name: "Validate required runtime parameters"
      fail:
        msg: "Required parameters missing. Pass: -e 'server_profile_template_moid=xxx resource_pool_moid=yyy organization_moid=zzz'"
      when: >
        template_moid == "" or
        pool_moid == "" or
        org_moid == ""

    - name: "Create Server Profile from Template"
      cisco.intersight.intersight_rest_api:
        api_key_id: "{{ intersight_api_key_id }}"
        api_private_key: "{{ intersight_api_private_key }}"
        api_uri: "{{ intersight_base_url }}"
        resource_path: /server/Profiles
        update_method: post
        api_body:
          Name: "{{ item.name }}"
          Description: "{{ item.description }}"
          TargetPlatform: "FIAttached"
          Type: "instance"
          ServerAssignmentMode: "Pool"
          SrcTemplate:
            ObjectType: "server.ProfileTemplate"
            Moid: "{{ template_moid }}"
          ServerPool:
            ObjectType: "resourcepool.Pool"
            Moid: "{{ pool_moid }}" # Fixed: was rp_moid
          Organization:
            ObjectType: "organization.Organization"
            Moid: "{{ org_moid }}"
          Tags:
            - Key: "configmode"
              Value: "ansible"
            - Key: "source_template"
              Value: "{{ template_name | default('unknown') }}"
            - Key: "resource_pool"
              Value: "{{ pool_name | default('unknown') }}"
      loop: "{{ profiles_to_create }}"
      loop_control:
        label: "{{ item.name }}"
      register: server_profile_creation_result

    - name: "Summarize created profiles"
      debug:
        msg: >-
          Profile {{ item.api_response.Name }} 
          (Moid: {{ item.api_response.Moid }}) 
          Assigned server: {{ item.api_response.AssignedServer.Moid | default('not yet assigned') }}
      loop: "{{ server_profile_creation_result.results }}"

    - name: "Standardized output"
      set_fact:
        workflow_output:
          server_profiles:
            created_profiles: "{{ server_profile_creation_result.results | map(attribute='api_response') | list }}"
            profile_moids: "{{ server_profile_creation_result.results | map(attribute='api_response.Moid') | list }}"
            template_used: "{{ template_name | default('unknown') }}"
            resource_pool_used: "{{ pool_name | default('unknown') }}"
          # Single profile MOID for backward compatibility
          server_profile_moid: "{{ server_profile_creation_result.results[0].api_response.Moid | default('') }}"
          job_type: "create_server_profiles"
          status: "success"
          count: "{{ server_profile_creation_result.results | length }}"
          server_object_type: "{{ server_profile_creation_result.results[0].api_response.ObjectType | default('unknown') }}"

    - name: "Debug workflow output"
      debug:
        var: workflow_output
