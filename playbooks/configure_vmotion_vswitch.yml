---
- name: Configure Vmotion vSwitch, PortGroups, VMkernel
  hosts: localhost
  connection: local
  gather_facts: yes

  vars_files:
    - credentials.yml

  vars:
    # Runtime parameters - can be passed via -e or AWX or chained from previous steps
    # mgmt_ip from Step 12 which is the host now
    # install_hostname from Step 12 which is username
    # root_password from Step 12
    esxi_hostname: "{{ steps.step12.os_installation.management_ip | default(mgmt_ip) | default('') }}"
    esxi_username: "{{ steps.step12.os_installation.hostname | default(esxi_username) | default('root') }}"
    esxi_password: "{{ steps.step12.os_installation.password | default(esxi_password) | default('') }}"
    switch_name: "{{ vmotion_vswitch_name | default('vSwitch3') }}"
    nic_list: "{{ vmotion_uplinks.split(',') | map('trim') | list | default(['vmnic6', 'vmnic7']) }}"
    pg_name: "{{ vmotion_portgroup | default('vMotion') }}"
    vlan_number: "{{ vmotion_vlan_id | default(0) }}"
    vmotion_address: "{{ steps.step6.ip_address | default(vmotion_ip) | default('') }}"
    vmotion_mask: "{{ vmotion_netmask | default('255.255.255.0') }}"

  tasks:
    - name: "Validate required runtime parameters"
      fail:
        msg: "Required parameters missing. Need: esxi_host, esxi_username, esxi_password, vmotion_vswitch_name, vmotion_portgroup, vmotion_ip, vmotion_netmask"
      when: >
        esxi_host is not defined or esxi_host == "" or
        esxi_username is not defined or esxi_username == "" or
        esxi_password is not defined or esxi_password == "" or
        switch_name is not defined or switch_name == "" or
        pg_name is not defined or pg_name == "" or
        vmotion_address is not defined or vmotion_address == "" or
        vmotion_mask is not defined or vmotion_mask == ""
    - name: Ensure vMotion vSwitch exists with specified uplinks
      community.vmware.vmware_vswitch:
        hostname: "{{ esxi_host }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        validate_certs: false
        esxi_hostname: "{{ esxi_host }}"
        switch: "{{ switch_name }}"
        nics: "{{ nic_list }}"
        state: present
      delegate_to: localhost
      register: vswitch_result

    - name: Ensure vMotion portgroup exists
      community.vmware.vmware_portgroup:
        hostname: "{{ esxi_host }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        validate_certs: false
        hosts: ["{{ esxi_host }}"]
        switch: "{{ switch_name }}"
        portgroup: "{{ pg_name }}"
        vlan_id: "{{ vlan_number }}"
        state: present
      delegate_to: localhost
      register: portgroup_result

    - name: Create/Update vMotion VMkernel (assign your vMotion IP + enable vMotion)
      community.vmware.vmware_vmkernel:
        hostname: "{{ esxi_host }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        validate_certs: false
        esxi_hostname: "{{ esxi_host }}"
        vswitch_name: "{{ switch_name }}"
        portgroup_name: "{{ pg_name }}"
        network:
          type: static
          ip_address: "{{ vmotion_address }}"
          subnet_mask: "{{ vmotion_mask }}"
        enable_vmotion: true
        state: present
      delegate_to: localhost
      register: vmkernel_result

    - name: "Show vMotion vSwitch configuration result"
      debug:
        msg: "âœ… vMotion vSwitch '{{ switch_name }}' configured with portgroup '{{ pg_name }}' and VMkernel IP {{ vmotion_address }} (vMotion enabled)"

    - name: "Standardized output"
      set_fact:
        workflow_results:
          vmotion_vswitch:
            esxi_host: "{{ esxi_host }}"
            vswitch_name: "{{ switch_name }}"
            uplinks: "{{ nic_list }}"
            portgroup: "{{ pg_name }}"
            vlan_id: "{{ vlan_number }}"
            vmkernel_ip: "{{ vmotion_address }}"
            vmkernel_netmask: "{{ vmotion_mask }}"
            vmotion_enabled: true
            vswitch_status: "{{ 'configured' if vswitch_result.changed else 'already_configured' }}"
            portgroup_status: "{{ 'configured' if portgroup_result.changed else 'already_configured' }}"
            vmkernel_status: "{{ 'configured' if vmkernel_result.changed else 'already_configured' }}"
            job_type: "configure_vmotion_vswitch"
            status: "success"
            timestamp: "{{ ansible_date_time.iso8601 }}"
