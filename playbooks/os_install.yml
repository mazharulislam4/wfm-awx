---
- name: OS Install in Intersight
  hosts: localhost
  connection: local
  gather_facts: yes

  vars_files:
    - credentials.yml

  vars:
    # Runtime parameters - can be passed via -e or AWX
    org_moid: "{{ steps.step1.organization_moid | default(organization_moid) | default('') }}"
    srvr_moid: "{{ steps.step4.server_profile_moid | default(server_moid) | default('') }}"
    srvr_object_type: "{{ steps.step4.server_object_type | default(server_object_type) | default('') }}"
    os_img_moid: "{{ steps.step8.os_image.moid | default(os_image_moid) | default('') }}"
    scu_img_moid: "{{ steps.step10.scu_image.moid | default(scu_image_moid) | default('') }}"
    cnfg_file_moid: "{{ steps.step9.os_config_file.moid | default(config_file_moid) | default('') }}"
    hostname: "{{ install_hostname | default('') }}"
    password: "{{ root_password }}"
    dns_primary_address: "{{ dns_primary }}"
    management_ip: "{{ steps.step6.mgmt_ip | default(mgmt_ip) | default('') }}"
    management_netmask: "{{ mgmt_netmask }}"
    management_gw: "{{ mgmt_gw }}"

  tasks:
    - name: "Validate required runtime parameters"
      fail:
        msg: "Required parameters missing. Pass all required moids and network configuration via -e flags"
      when: >
        org_moid is not defined or org_moid == "" or
        srvr_moid is not defined or srvr_moid == "" or
        srvr_object_type is not defined or srvr_object_type == "" or
        os_img_moid is not defined or os_img_moid == "" or
        cnfg_file_moid is not defined or cnfg_file_moid == "" or
        scu_img_moid is not defined or scu_img_moid == "" or
        hostname is not defined or hostname == "" or
        password is not defined or password == "" or
        dns_primary_address is not defined or dns_primary_address == "" or
        management_ip is not defined or management_ip == "" or
        management_netmask is not defined or management_netmask == "" or
        management_gw is not defined or management_gw == ""
    - name: Trigger OS Install
      cisco.intersight.intersight_rest_api:
        api_key_id: "{{ intersight_api_key_id }}"
        api_private_key: "{{ intersight_api_private_key }}"
        api_uri: "{{ intersight_base_url }}"
        resource_path: "/os/Installs"
        update_method: post
        api_body:
          Description: "Performing OS Install through Ansible Code"
          InstallMethod: "vMedia"
          Image:
            ObjectType: "softwarerepository.OperatingSystemFile"
            Moid: "{{ os_img_moid }}"
          OsduImage:
            ObjectType: "firmware.ServerConfigurationUtilityDistributable"
            Moid: "{{ scu_img_moid }}"
          OverrideSecureBoot: true
          Organization:
            ObjectType: "organization.Organization"
            Moid: "{{ org_moid }}"
          Server:
            ObjectType: "{{ srvr_object_type }}"
            Moid: "{{ srvr_moid }}"
          ConfigurationFile:
            ObjectType: "os.ConfigurationFile"
            Moid: "{{ cnfg_file_moid }}"
          AdditionalParameters: null
          Answers:
            Hostname: "{{ hostname }}"
            IpConfigType: "static"
            RootPassword: "{{ password }}"
            IsRootPasswordCrypted: false
            Nameserver: "{{ dns_primary_address }}"
            Source: "Template"
            IpConfiguration:
              ObjectType: "os.Ipv4Configuration"
              IpV4Config:
                IpAddress: "{{ management_ip }}"
                Netmask: "{{ management_netmask }}"
                Gateway: "{{ management_gw }}"
          InstallTarget:
            ObjectType: "os.VirtualDrive"
            Name: "MStorBootVd"
            StorageControllerSlotId: "MSTOR-RAID"
            Id: "0"
      register: install_resp

    - name: Show OS install response
      debug:
        var: install_resp.api_response

    - name: "Standardized output"
      set_fact:
        workflow_results:
          os_installation:
            install_moid: "{{ install_resp.api_response.Moid | default('unknown') }}"
            moid: "{{ srvr_moid }}"
            hostname: "{{ hostname }}"
            mgmt_ip: "{{ management_ip }}"
            install_status: "{{ install_resp.api_response.InstallState | default('initiated') }}"
            data: "{{ install_resp }}"
            job_type: "os_install"
            status: "success"
            password: "{{ password }}"
