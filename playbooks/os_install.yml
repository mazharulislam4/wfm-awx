---
- name: OS Install in Intersight
  hosts: localhost
  connection: local
  gather_facts: no

  vars_files:
    - credentials.yml

  vars:
    # Runtime parameters - must be passed via extra-vars
    org_moid: "{{ organization_moid }}"
    server_moid: "{{ server_moid }}"
    server_object_type: "{{ server_object_type }}"
    os_image_moid: "{{ os_image_moid }}"
    config_file_moid: "{{ config_file_moid }}"
    scu_image_moid: "{{ scu_image_moid }}"
    install_hostname: "{{ install_hostname }}"
    root_password: "{{ root_password }}"
    dns_primary: "{{ dns_primary }}"
    mgmt_ip: "{{ mgmt_ip }}"
    mgmt_netmask: "{{ mgmt_netmask }}"
    mgmt_gw: "{{ mgmt_gw }}"

  tasks:
    - name: "Validate required runtime parameters"
      fail:
        msg: "Required parameters missing. Pass all required moids and network configuration via -e flags"
      when: >
        organization_moid is not defined or organization_moid == "" or
        server_moid is not defined or server_moid == "" or
        server_object_type is not defined or server_object_type == "" or
        os_image_moid is not defined or os_image_moid == "" or
        config_file_moid is not defined or config_file_moid == "" or
        scu_image_moid is not defined or scu_image_moid == "" or
        install_hostname is not defined or install_hostname == "" or
        root_password is not defined or root_password == "" or
        dns_primary is not defined or dns_primary == "" or
        mgmt_ip is not defined or mgmt_ip == "" or
        mgmt_netmask is not defined or mgmt_netmask == "" or
        mgmt_gw is not defined or mgmt_gw == ""
    - name: Trigger OS Install
      cisco.intersight.intersight_rest_api:
        api_key_id: "{{ intersight_api_key_id }}"
        api_private_key: "{{ intersight_api_private_key }}"
        api_uri: "{{ intersight_base_url }}"
        resource_path: "/os/Installs"
        update_method: post
        api_body:
          Description: "Performing OS Install through Ansible Code"
          InstallMethod: "vMedia"
          Image:
            ObjectType: "softwarerepository.OperatingSystemFile"
            Moid: "{{ os_image_moid }}"
          OsduImage:
            ObjectType: "firmware.ServerConfigurationUtilityDistributable"
            Moid: "{{ scu_image_moid }}"
          OverrideSecureBoot: true
          Organization:
            ObjectType: "organization.Organization"
            Moid: "{{ org_moid }}"
          Server:
            ObjectType: "{{ server_object_type }}"
            Moid: "{{ server_moid }}"
          ConfigurationFile:
            ObjectType: "os.ConfigurationFile"
            Moid: "{{ config_file_moid }}"
          AdditionalParameters: null
          Answers:
            Hostname: "{{ install_hostname }}"
            IpConfigType: "static"
            RootPassword: "{{ root_password }}"
            IsRootPasswordCrypted: false
            Nameserver: "{{ dns_primary }}"
            Source: "Template"
            IpConfiguration:
              ObjectType: "os.Ipv4Configuration"
              IpV4Config:
                IpAddress: "{{ mgmt_ip }}"
                Netmask: "{{ mgmt_netmask }}"
                Gateway: "{{ mgmt_gw }}"
          InstallTarget:
            ObjectType: "os.VirtualDrive"
            Name: "MStorBootVd"
            StorageControllerSlotId: "MSTOR-RAID"
            Id: "0"
      register: install_resp

    - name: Show OS install response
      debug:
        var: install_resp.api_response

    - name: "Standardized output"
      set_fact:
        workflow_results:
          os_installation:
            install_moid: "{{ install_resp.api_response.Moid | default('unknown') }}"
            server_moid: "{{ server_moid }}"
            hostname: "{{ install_hostname }}"
            mgmt_ip: "{{ mgmt_ip }}"
            install_status: "{{ install_resp.api_response.InstallState | default('initiated') }}"
            data: "{{ install_resp }}"
            job_type: "os_install"
            status: "success"
